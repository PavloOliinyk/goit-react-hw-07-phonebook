{"version":3,"sources":["components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/contactSlice.js","components/ContactForm/ContactForm.js","redux/actions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactList/Contact/Contact.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","phone","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactForm","contacts","useState","setName","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","some","contact","includes","window","alert","background","screen","screenHeader","screenHeaderLeft","screenHeaderButton","close","maximize","minimize","screenHeaderRight","screenHeaderEllipsis","screenBody","screenBodyItem","appFormGroup","type","pattern","title","required","onChange","appFormControl","appFormButton","filterContact","createAction","Filter","filter","useSelector","state","dispatch","useDispatch","currentTarget","ContactList","cardContainer","Contact","id","card","cardContent","cardInfo","cardButton","onClick","App","data","filterContacts","toLowerCase","map","uuidv4","filterReducer","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,6BAA6B,WAAa,8B,mBCAvGD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,KAAO,qBAAqB,aAAe,6BAA6B,eAAiB,iC,mBCA3JD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,cAAgB,qC,mBCA7ED,EAAOC,QAAU,CAAC,UAAY,+B,8JCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,uBCD1BI,EAAcC,YAAU,CACnCC,YAAa,aACbC,UAAWC,YAAe,CACxBC,QAAS,gDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAEpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,kBAAuB,CAC5BK,IAAK,YACLC,OAAQ,OACRG,KAAM,CACJC,KAJG,EAAGA,KAKNC,MALG,EAASC,UAQhBL,gBAAiB,CAAC,iBAMtBM,EAGEvB,EAHFuB,sBACAC,EAEExB,EAFFwB,yBACAC,EACEzB,EADFyB,yB,gBCkEaC,MAlGf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAON,EAAP,KAAeQ,EAAf,KACA,EAAwBL,IAAjBP,EAAP,oBAEMa,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACN,IAAK,OACHS,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,KAyBVC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,sBAAMM,SAvBa,SAAAJ,GAMnB,GALAA,EAAEK,iBACyBV,EAASW,MAAK,SAAAC,GAAO,OAC9CA,EAAQnB,KAAKoB,SAASpB,MAMtB,OAFAqB,OAAOC,MAAP,UAAgBtB,EAAhB,iCACAe,IAIFjB,EAAc,CAAEE,OAAME,WAEtBa,KASA,SACE,qBAAKtC,UAAWC,IAAE6C,WAAlB,SACE,qBAAK9C,UAAWC,IAAEC,UAAlB,SACE,sBAAKF,UAAWC,IAAE8C,OAAlB,UACE,sBAAK/C,UAAWC,IAAE+C,aAAlB,UACE,sBAAKhD,UAAWC,IAAEgD,iBAAlB,UACE,qBAAKjD,UAAS,UAAKC,IAAEiD,mBAAP,YAA6BjD,IAAEkD,SAC7C,qBAAKnD,UAAS,UAAKC,IAAEiD,mBAAP,YAA6BjD,IAAEmD,YAC7C,qBAAKpD,UAAS,UAAKC,IAAEiD,mBAAP,YAA6BjD,IAAEoD,eAE/C,sBAAKrD,UAAWC,IAAEqD,kBAAlB,UACE,qBAAKtD,UAAWC,IAAEsD,uBAClB,qBAAKvD,UAAWC,IAAEsD,uBAClB,qBAAKvD,UAAWC,IAAEsD,6BAGtB,qBAAKvD,UAAWC,IAAEuD,WAAlB,SACE,sBAAKxD,UAAWC,IAAEwD,eAAlB,UACE,wBAAOzD,UAAWC,IAAEyD,aAApB,iBAEE,uBACEC,KAAK,OACLpC,KAAK,OACLqC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRzB,MAAOd,EACPwC,SAAU7B,EACVlC,UAAWC,IAAE+D,oBAGjB,wBAAOhE,UAAWC,IAAEyD,aAApB,mBAEE,uBACEC,KAAK,MACLpC,KAAK,SACLqC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRzB,MAAOZ,EACPsC,SAAU7B,EACVlC,UAAWC,IAAE+D,oBAGjB,wBAAQhE,UAAWC,IAAEgE,cAArB,wC,OClFHC,EAAgBC,YAAa,kB,iBCc3BC,MApBf,WACE,IAAMC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpCG,EAAWC,cAEjB,OACE,qBAAKzE,UAAWC,IAAEwD,eAAlB,SACE,wBAAOzD,UAAWC,IAAEyD,aAApB,kCAEE,uBACEC,KAAK,OACLpC,KAAK,SACLc,MAAOgC,EACPN,SAAU,SAAA5B,GAAC,OAAIqC,EAASN,EAAc/B,EAAEuC,cAAcrC,SACtDrC,UAAWC,IAAE+D,uB,iBCRRW,MARf,YAAoC,IAAb5E,EAAY,EAAZA,SACrB,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACE,oBAAIF,UAAS,eAAUC,IAAE2E,eAAzB,SAA2C7E,O,iBCmBlC8E,MApBf,YAAoD,IAAD,IAAhCnC,QAAWnB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOsD,EAAQ,EAARA,GACzC,EAAwBnD,IAAjBZ,EAAP,oBAEA,OACE,oBAAIf,UAAWC,IAAE8E,KAAjB,SACE,sBAAK/E,UAAWC,IAAE+E,YAAlB,UACE,mBAAGhF,UAAWC,IAAEgF,SAAhB,SAA2B1D,IAC3B,mBAAGvB,UAAWC,IAAEgF,SAAhB,SAA2BzD,IAC3B,wBAAQxB,UAAWC,IAAEiF,WAAYC,QAAS,kBAAMpE,EAAc+D,IAA9D,kCCyBOM,I,EAAAA,EA3Bf,WACE,IAActD,EAAaJ,IAAnB2D,KAEFhB,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UAEpCiB,EAAiB,SAAAxD,GAAQ,OAC7BA,EACI,YAAIA,GAAUuC,QAAO,qBAAG9C,KAAgBgE,cAAc5C,SAAS0B,MAC/D,MAEN,OACE,eAAC,EAAD,WACE,oBAAIrE,UAAU,QAAd,uBACA,cAAC,EAAD,CAAa8B,SAAUA,IACvB,oBAAI9B,UAAU,QAAd,sBACA,cAAC,EAAD,IAEA,cAAC,EAAD,UACGsF,EAAexD,IACdwD,EAAexD,GAAU0D,KAAI,SAAA9C,GAAO,OAClC,cAAC,EAAD,CAAwBA,QAASA,GAAnB+C,wB,OC3BbC,EAAgBC,YAAc,GAAD,eACvCzB,GAAgB,SAAC0B,EAAD,YAAMC,YCCZC,EAAQC,YAAe,CAClCC,SAAO,mBACJ7F,EAAYE,YAAcF,EAAY6F,SADlC,uBAEGN,GAFH,GAKPO,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9B/F,EAAY8F,gBAIhBE,YAAeL,EAAMtB,UCRrB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SAEE,cAAC,EAAD,QAIJS,SAASC,eAAe,U,kBChB1B5G,EAAOC,QAAU,CAAC,WAAa,gCAAgC,UAAY,+BAA+B,OAAS,4BAA4B,aAAe,kCAAkC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,MAAQ,2BAA2B,SAAW,8BAA8B,SAAW,8BAA8B,kBAAoB,uCAAuC,qBAAuB,0CAA0C,WAAa,gCAAgC,eAAiB,oCAAoC,KAAO,0BAA0B,SAAW,8BAA8B,WAAa,gCAAgC,aAAe,kCAAkC,eAAiB,oCAAoC,cAAgB,sC","file":"static/js/main.586782a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Contact_card__3gdtJ\",\"cardContent\":\"Contact_cardContent__2EtEW\",\"cardButton\":\"Contact_cardButton__1XdXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenBodyItem\":\"Filter_screenBodyItem__2gGi_\",\"left\":\"Filter_left__2qap1\",\"appFormGroup\":\"Filter_appFormGroup__3WnLd\",\"appFormControl\":\"Filter_appFormControl__25aeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__sUB1v\",\"cardContainer\":\"ContactList_cardContainer__1_baY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eQXo\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6190e15341928b001768feb7.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: {\n          name,\n          phone: number,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactsApi;\n","import { useState } from 'react';\nimport { useCreateContactMutation } from '../../redux/contactSlice';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    createContact({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.background}>\n        <div className={s.container}>\n          <div className={s.screen}>\n            <div className={s.screenHeader}>\n              <div className={s.screenHeaderLeft}>\n                <div className={`${s.screenHeaderButton} ${s.close}`}></div>\n                <div className={`${s.screenHeaderButton} ${s.maximize}`}></div>\n                <div className={`${s.screenHeaderButton} ${s.minimize}`}></div>\n              </div>\n              <div className={s.screenHeaderRight}>\n                <div className={s.screenHeaderEllipsis}></div>\n                <div className={s.screenHeaderEllipsis}></div>\n                <div className={s.screenHeaderEllipsis}></div>\n              </div>\n            </div>\n            <div className={s.screenBody}>\n              <div className={s.screenBodyItem}>\n                <label className={s.appFormGroup}>\n                  Name\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                    className={s.appFormControl}\n                  />\n                </label>\n                <label className={s.appFormGroup}>\n                  Number\n                  <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                    className={s.appFormControl}\n                  />\n                </label>\n                <button className={s.appFormButton}>Add contact</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuidv4 } from 'uuid';\n\n// export const addContact = createAction('contact/add', data => ({\n//   payload: {\n//     ...data,\n//     id: uuidv4(),\n//   },\n// }));\n\n// export const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('contact/filter');\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\n\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.screenBodyItem}>\n      <label className={s.appFormGroup}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.currentTarget.value))}\n          className={s.appFormControl}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import s from './ContactList.module.css';\n\nfunction ContactList({ children }) {\n  return (\n    <div className={s.container}>\n      <ul className={`list ${s.cardContainer}`}>{children}</ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nimport { useDeleteContactMutation } from '../../../redux/contactSlice';\n\nfunction Contact({ contact: { name, phone, id } }) {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <li className={s.card}>\n      <div className={s.cardContent}>\n        <p className={s.cardInfo}>{name}</p>\n        <p className={s.cardInfo}>{phone}</p>\n        <button className={s.cardButton} onClick={() => deleteContact(id)}>\n          Delete contact\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\n\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Contact from './components/ContactList/Contact';\nimport { useFetchContactsQuery } from './redux/contactSlice';\n\nfunction App() {\n  const { data: contacts } = useFetchContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n\n  const filterContacts = contacts =>\n    contacts\n      ? [...contacts].filter(({ name }) => name.toLowerCase().includes(filter))\n      : null;\n\n  return (\n    <Container>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm contacts={contacts} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n\n      <ContactList>\n        {filterContacts(contacts) &&\n          filterContacts(contacts).map(contact => (\n            <Contact key={uuidv4()} contact={contact} />\n          ))}\n      </ContactList>\n    </Container>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './actions';\n\nexport const filterReducer = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { contactsApi } from './contactSlice';\nimport { filterReducer } from './reducers';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterReducer,\n  },\n\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ContactForm_background__a-WWt\",\"container\":\"ContactForm_container__24ccR\",\"screen\":\"ContactForm_screen__15hHX\",\"screenHeader\":\"ContactForm_screenHeader__aNQn_\",\"screenHeaderLeft\":\"ContactForm_screenHeaderLeft__2xRPN\",\"screenHeaderButton\":\"ContactForm_screenHeaderButton__1D2mR\",\"close\":\"ContactForm_close__2q2hN\",\"maximize\":\"ContactForm_maximize__2cVE3\",\"minimize\":\"ContactForm_minimize__3FEoW\",\"screenHeaderRight\":\"ContactForm_screenHeaderRight__FloX3\",\"screenHeaderEllipsis\":\"ContactForm_screenHeaderEllipsis__-2aob\",\"screenBody\":\"ContactForm_screenBody___8UOm\",\"screenBodyItem\":\"ContactForm_screenBodyItem__1ivFb\",\"left\":\"ContactForm_left__-q993\",\"appTitle\":\"ContactForm_appTitle__o-KHM\",\"appContact\":\"ContactForm_appContact__355za\",\"appFormGroup\":\"ContactForm_appFormGroup__qLDwx\",\"appFormControl\":\"ContactForm_appFormControl__1A7A5\",\"appFormButton\":\"ContactForm_appFormButton__1sf-6\"};"],"sourceRoot":""}